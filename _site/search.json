[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "Andreas Schleicher, the director of education at the OECD, highlighted in a BBC article in 2016 that Singapore successfully attained academic excellence without significant disparities between children from affluent and underprivileged families. Additionally, various Ministers for Education in Singapore initiated a “every school a good school” campaign. Nevertheless, there is a prevalent public perception that disparities persist, particularly between elite and neighborhood schools, as well as among students from families with varying socioeconomic statuses, including those with higher and lower socioeconomic status, and between immigrant and non-immigrant families.\nThe 2022 Programme for International Student Assessment (PISA) data was released on December 5, 2022. PISA global education survey every three years to assess the education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science.\n\n\n\nUse appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "Andreas Schleicher, the director of education at the OECD, highlighted in a BBC article in 2016 that Singapore successfully attained academic excellence without significant disparities between children from affluent and underprivileged families. Additionally, various Ministers for Education in Singapore initiated a “every school a good school” campaign. Nevertheless, there is a prevalent public perception that disparities persist, particularly between elite and neighborhood schools, as well as among students from families with varying socioeconomic statuses, including those with higher and lower socioeconomic status, and between immigrant and non-immigrant families.\nThe 2022 Programme for International Student Assessment (PISA) data was released on December 5, 2022. PISA global education survey every three years to assess the education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#task",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "Use appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-the-relevant-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-the-relevant-packages",
    "title": "Take-home_Ex01",
    "section": "2.1 Load the relevant packages",
    "text": "2.1 Load the relevant packages\nWe use the pacman::p_load() function to load the required R packages into our working environment. The loaded packages are:\n\n\nShow the code\npacman::p_load(ggrepel, ggplot2,\n               distributional,\n               ggthemes, \n               tidyverse,\n              DT,dplyr,nortest) \n\n\n\n\n\n\n\n\n\nPackage\nDescription\n\n\n\n\nggrepel\nA package that enhances the ggplot2 plotting system. It provides functions to automatically adjust and repel overlapping text labels in ggplot2 plots\n\n\ndistributional\nA package designed for exploratory data analysis and visualization of univariate and bivariate distributions\n\n\nggthemes\nAn extension of ggplot2 that provides additional themes and color scales for creating visually appealing and consistent plots\n\n\ntidyverse\nA collection of R packages, including ggplot2, dplyr, tidyr, readr, purrr, and others.\n\n\nDT\nAn R package for creating interactive and dynamic tables and data tables\n\n\nnortest\nA package that includes various statistical tests and measures for assessing normality and symmetry of data"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#pre-processing-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#pre-processing-data",
    "title": "Take-home_Ex01",
    "section": "2.2 Pre-processing Data",
    "text": "2.2 Pre-processing Data\n\n2.2.1 Prepare main data-frame stu_df\nIn order to tidy up the data file:\n\nLoad stu_qqq_SG.rds data file.\nSelect specific columns representing student information, including identifiers, gender, school ID, parental education, training information, possession of various items, and academic scores in mathematics, reading, and science.\n\nStudent_ID: Student identifiers.\nGender: Gender information.\nSchool_ID: School identifiers.\nEducation_mother: Education level of the mother.\nEducation_father: Education level of the father.\nTraining_mother and Training_father: (These columns are currently commented out, so not included in the final data frame.)\nPossession_room, Possession_computer, Possession_software, Possession_phone, Possession_internet, and Possession_book: Information about possession of various items.\nMath_Average, Reading_Average, Science_Average: Average scores in mathematics, reading, and science, respectively.\nAverage_score: Overall average score calculated as the mean of math, reading, and science scores.\n\ncalculated average scores for mathematics, reading, and science separately using the rowMeans function.\ncreated a new data frame stu_df by combining the selected columns and calculated average scores.\n\n\n\nShow the code\nstu_qqq_SG &lt;- \n  read_rds(\"data/stu_qqq_SG.rds\")\n\nstudent_columns &lt;- \"CNTSTUID\"\ngender_columns &lt;- \"ST004D01T\"\nschool_columns &lt;- \"CNTSCHID\"\n\neducation_column_mother &lt;- \"ST005Q01JA\"\neducation_column_father &lt;- \"ST007Q01JA\"\n\ntraining_column_mother &lt;- \"ST006Q01JA\"\ntraining_column_father &lt;- \"ST008Q01JA\"\npossession_room_column &lt;- \"ST250Q01JA\"\npossession_computer_column &lt;- \"ST250Q02JA\"\npossession_software_column &lt;- \"ST250Q03JA\"\npossession_phone_column &lt;- \"ST250Q04JA\"\npossession_internet_column &lt;- \"ST250Q05JA\"\npossession_book_column &lt;- \"ST255Q01JA\"\n\n\n\nmath_columns &lt;- c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")\nreading_columns &lt;- c(\"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")\nscience_columns &lt;- c(\"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")\n\nstudent_ID &lt;- stu_qqq_SG[, student_columns, drop = FALSE]\ngender &lt;- stu_qqq_SG[, gender_columns, drop = FALSE]\nschool_ID &lt;- stu_qqq_SG[, school_columns, drop = FALSE]\neducation_mother &lt;- stu_qqq_SG[, education_column_mother, drop = FALSE]\neducation_father &lt;- stu_qqq_SG[, education_column_father, drop = FALSE]\n\ntraining_mother &lt;- stu_qqq_SG[, training_column_mother, drop = FALSE]\ntraining_father &lt;- stu_qqq_SG[, training_column_father, drop = FALSE]\npossession_room &lt;- stu_qqq_SG[, possession_room_column, drop = FALSE]\npossession_computer &lt;- stu_qqq_SG[, possession_computer_column, drop = FALSE]\npossession_software &lt;- stu_qqq_SG[, possession_software_column, drop = FALSE]\npossession_phone &lt;- stu_qqq_SG[, possession_phone_column, drop = FALSE]\npossession_internet &lt;- stu_qqq_SG[, possession_internet_column, drop = FALSE]\npossession_book &lt;- stu_qqq_SG[, possession_book_column, drop = FALSE]\n\nmath_avg &lt;- rowMeans(stu_qqq_SG[, math_columns, drop = FALSE])\nreading_avg &lt;- rowMeans(stu_qqq_SG[, reading_columns, drop = FALSE])\nscience_avg &lt;- rowMeans(stu_qqq_SG[, science_columns, drop = FALSE])\n\n\nstu_df &lt;- data.frame(Student_ID = student_ID,\n  Gender = gender,\n  School_ID = school_ID,\n  Education_mother = education_mother,\n  Education_father = education_father,\n \n#  Training_mother = training_mother,\n#  Training_father = training_father,\n  Possession_room = possession_room,\n  Possession_computer = possession_computer,\n  Possession_software = possession_software,\n  Possession_phone = possession_phone,\n  Possession_internet = possession_internet,\n  Possession_book = possession_book,\n  \n  Math_Average = round(math_avg,digits=2),\n  Reading_Average = round(reading_avg,digits=2),\n  Science_Average = round(science_avg,digits=2),\nAverage_score=round(((math_avg+reading_avg+science_avg)/3),digits=2))\n\n\nThis is the first 5 rows of processed data-frame stu_df :\n\n\nShow the code\nnames(stu_df) &lt;- c(\"Student_ID\",\"Gender\",\"School_ID\",\"Education_mother\",\n                   \"Education_father\",\"Possession_room\",\"Possession_computer\",\n                   \"Possession_software\",\"Possession_phone\",\n                   \"Possession_internet\",\"Possession_book\",\"Math_Average\",\n                   \"Reading_Average\",\"Science_Average\",\"Average_Score\")\n\ndatatable(head(stu_df, n=5), options = list(dom='t'), \n              caption = \"Data-frame 1: First 5 row of the student data\",\n              rownames = FALSE) \n\n\n\n\n\n\n\n\n\n2.2.2 Prepare data-frame for performance by school analysis Score_by_School\nIn order to better visualize the relationship of performance by school, the following data-frame is being created. This code performs group-wise summary statistics on the stu_df dataset, grouping the data by the School_ID variable. The resulting summary, Score_by_School, includes mean scores for math, reading, science, and overall average scores.\nThis is the first 5 rows of processed data-frame Score_by_School :\n\n\nShow the code\n# Create Score_by_School dataframe\nScore_by_School &lt;- stu_df %&gt;%\n  group_by(School_ID) %&gt;%\n  summarize(\n    Math_Average = round(mean(Math_Average, na.rm = TRUE), digits = 2),\n    Reading_Average = round(mean(Reading_Average, na.rm = TRUE), digits = 2),\n    Science_Average = round(mean(Science_Average, na.rm = TRUE), digits = 2),\n    Average_score = round(mean(Average_Score, na.rm = TRUE), digits = 2)\n  )\n\n# Print the Score_by_School dataframe\ndatatable(head(Score_by_School, n=5), options = list(dom='t'), \n              caption = \"Table 2: First 5 row of School Average Scores\",\n              rownames = FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performance-by-gender",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performance-by-gender",
    "title": "Take-home_Ex01",
    "section": "4.1 Performance by Gender",
    "text": "4.1 Performance by Gender\nViolin plots can reveal the skewness of the data and the presence of outliers. Skewed or asymmetrical shapes in the violin plot may indicate differences in the spread or tail of the distribution between genders.\nThe central “box” or “kernel density” of the violin plot shows the central tendency and spread of the data for each gender group. It includes information about medians, quartiles, and interquartile ranges.\n\nMathReadingScienceAverage\n\n\n\n\nShow the code\nggplot(stu_df, aes(x = factor(Gender), y = Math_Average, fill = factor(Gender))) +\n geom_violin(trim = FALSE) +\n  geom_boxplot(width = 0.2, position = position_dodge(width = 0.75)) +\n  stat_summary(\n    fun = median,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = -1,\n    size = 3,\n    color = \"black\"\n  ) +\n  stat_summary(\n    fun = mean,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = 1.51,\n    size = 3,\n    color = \"#B00000\"\n  ) +\n   # Add geom_text layer for displaying mean dot in red\n  stat_summary(fun = mean, geom = \"point\", shape = 16, size = 3, color = \"#B00000\",\n               position = position_nudge(x = 0.0)) +\n  labs(title = \"Violin Plot with Box Plot and Labels for Math Score\",\n       subtitle = \"(Black text: Median score; Red dot & Red text: Mean score)\",\n       x = \"Gender\",\n       y = \"Math Score\") +\n  scale_fill_manual(values = c(\"1\" = \"pink3\", \"2\" = \"cadetblue3\"), name = \"Gender\", labels = c(\"1\" = \"Female\", \"2\" = \"Male\"))+\n  scale_x_discrete(labels = c(\"1\" = \"Female\", \"2\" = \"Male\"))+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(stu_df, aes(x = factor(Gender), y = Reading_Average, fill = factor(Gender))) +\n geom_violin(trim = FALSE) +\n  geom_boxplot(width = 0.2, position = position_dodge(width = 0.75)) +\n  stat_summary(\n    fun = median,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = -1,\n    size = 3,\n    color = \"black\"\n  ) +\n  stat_summary(\n    fun = mean,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = 1.5,\n    size = 3,\n    color = \"#B00000\"\n  ) +\n   # Add geom_text layer for displaying mean dot in red\n  stat_summary(fun = mean, geom = \"point\", shape = 16, size = 3, color = \"#B00000\",\n               position = position_nudge(x = 0.0)) +\n  labs(title = \"Violin Plot with Box Plot and Labels for Reading Score\",\n       subtitle = \"(Black text: Median score; Red dot & Red text: Mean score)\",\n       x = \"Gender\",\n       y = \"Reading Score\") +\n  scale_fill_manual(values = c(\"1\" = \"pink3\", \"2\" = \"cadetblue3\"), name = \"Gender\", labels = c(\"1\" = \"Female\", \"2\" = \"Male\"))+\n  scale_x_discrete(labels = c(\"1\" = \"Female\", \"2\" = \"Male\"))+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(stu_df, aes(x = factor(Gender), y = Science_Average, fill = factor(Gender))) +\n geom_violin(trim = FALSE) +\n  geom_boxplot(width = 0.2, position = position_dodge(width = 0.75)) +\n  stat_summary(\n    fun = median,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = -1,\n    size = 3,\n    color = \"black\"\n  ) +\n  stat_summary(\n    fun = mean,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = 1.5,\n    size = 3,\n    color = \"#B00000\"\n  ) +\n   # Add geom_text layer for displaying mean dot in red\n  stat_summary(fun = mean, geom = \"point\", shape = 16, size = 3, color = \"#B00000\",\n               position = position_nudge(x = 0.0)) +\n  labs(title = \"Violin Plot with Box Plot and Labels for Science Score\",\n       subtitle = \"(Black text: Median score; Red dot & Red text: Mean score)\",\n       x = \"Gender\",\n       y = \"Reading Score\") +\n  scale_fill_manual(values = c(\"1\" = \"pink3\", \"2\" = \"cadetblue3\"), name = \"Gender\", labels = c(\"1\" = \"Female\", \"2\" = \"Male\"))+\n  scale_x_discrete(labels = c(\"1\" = \"Female\", \"2\" = \"Male\"))+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(stu_df, aes(x = factor(Gender), y = Average_Score, fill = factor(Gender))) +\n geom_violin(trim = FALSE) +\n  geom_boxplot(width = 0.2, position = position_dodge(width = 0.75)) +\n  stat_summary(\n    fun = median,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = -1,\n    size = 3,\n    color = \"black\"\n  ) +\n  stat_summary(\n    fun = mean,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = 1.5,\n    size = 3,\n    color = \"#B00000\"\n  ) +\n   # Add geom_text layer for displaying mean dot in red\n  stat_summary(fun = mean, geom = \"point\", shape = 16, size = 3, color = \"#B00000\",\n               position = position_nudge(x = 0.0)) +\n  labs(title = \"Violin Plot with Box Plot and Labels for Average Score\",\n       subtitle = \"(Black text: Median score; Red dot & Red text: Mean score)\",\n       x = \"Gender\",\n       y = \"Reading Score\") +\n  scale_fill_manual(values = c(\"1\" = \"pink3\", \"2\" = \"cadetblue3\"), name = \"Gender\", labels = c(\"1\" = \"Female\", \"2\" = \"Male\"))+\n  scale_x_discrete(labels = c(\"1\" = \"Female\", \"2\" = \"Male\"))+\n  theme_minimal()\n\n\n\n\n\n\n\n\nFrom the above violin plots, we can conclude:\n\nMale plot is more spread out, which indicates greater variability in scores within the male group\nFemale group has better performance in Reading while male group has better performance in math and science (interpret based on median and mean)\nFemale group and male group have similar average performance\nAlmost all the distribution are left skewed, indicating a concentration of students with relatively higher scores, but a few students have much lower scores"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performance-by-school",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performance-by-school",
    "title": "Take-home_Ex01",
    "section": "4.2 Performance by School",
    "text": "4.2 Performance by School\nBy using box-plot, we can visualize the performance of the schools. Box-plot allows to identify outliers so that we can identify the top 3 schools and bottom 2 schools.\n\n\nShow the code\nScore_long &lt;- Score_by_School %&gt;%\n  pivot_longer(\n    cols = c(\"Math_Average\", \"Reading_Average\", \"Science_Average\", \"Average_score\"),\n    names_to = \"Score_Type\",\n    values_to = \"Score\"\n  )\n\n# Calculate outliers using the IQR method\noutliers &lt;- Score_long %&gt;%\n  group_by(Score_Type) %&gt;%\n  summarize(\n    lower_limit = quantile(Score, 0.25) - 1.5 * IQR(Score),\n    upper_limit = quantile(Score, 0.75) + 1.5 * IQR(Score)\n  ) %&gt;%\n  left_join(Score_long, by = \"Score_Type\") %&gt;%\n  filter(Score &lt; lower_limit | Score &gt; upper_limit)\n\n# Identify the top 3 and bottom 2 schools for each Score_Type\nselected_schools &lt;- outliers %&gt;%\n  group_by(Score_Type) %&gt;%\n  arrange(desc(Score)) %&gt;%\n  slice_head(n = 3) %&gt;%\n  bind_rows(\n    outliers %&gt;%\n      group_by(Score_Type) %&gt;%\n      arrange(Score) %&gt;%\n      slice_head(n = 2)\n  )\n\n# Custom fill colors\ncustom_fill_colors &lt;- c(\"Math_Average\" = \"mistyrose3\", \n                        \"Reading_Average\" = \"paleturquoise3\", \n                        \"Science_Average\" = \"darkolivegreen3\",\n                        \"Average_score\" = \"lavender\")\n\n# Plot box plot with selected outlier labels\nggplot(Score_long, aes(x = Score_Type, y = Score, fill = Score_Type)) +\n  geom_boxplot(fill = custom_fill_colors) +  # Use custom fill colors\n  geom_text_repel(data = selected_schools, aes(label = School_ID), \n                  box.padding = 0.8, point.padding = 0.5, max.iter = 500, size = 3) +\n  labs(title = \"Distribution of Scores by School\",\n       x = \"Subject\",\n       y = \"Score\",\n       fill = \"Score Type\") +\n  scale_fill_manual(values = custom_fill_colors) +  # Set fill colors manually\n  theme_minimal()\n\n\n\n\n\nFrom the above box-plot:\n\nSchool ID 70200001, 70200003, 70200101 are considered the top performing schools\nFor all three subject, school ID 70200115 and 70200149 are the 2 schools with worst performance"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performance-by-socioeconomic-factors",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performance-by-socioeconomic-factors",
    "title": "Take-home_Ex01",
    "section": "4.3 Performance by Socioeconomic factors",
    "text": "4.3 Performance by Socioeconomic factors\n\n4.3.1 Performance distribution by highest level of schooling of Parents\nDensity plot allows for the exploration of the distribution of performance across different levels of schooling of the parents. The inclusion of red mean lines enhances the understanding of central tendencies in each category.\n\n\n\nHighest level of schooling\nDescription\n\n\n\n\n1\n&lt;ISCED level 3.4&gt;\n\n\n2\n&lt;ISCED level 3.3&gt;\n\n\n3\n&lt;ISCED level 2&gt;\n\n\n4\n&lt;ISCED level 1&gt;\n\n\n5\nDid not complete &lt;ISCED level 1&gt;\n\n\n\n\n4.3.1.1 Highest level of schooling of mother\n\nMathReadingScienceAverage\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Education_mother)) %&gt;%\n  group_by(Education_mother) %&gt;%\n  summarize(mean_value = mean(Math_Average, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Math_Average, fill = Education_mother)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Education_mother, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of math average score by highest level of schooling of mother\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Math Average Score\",\n       fill = \"level of schooling(mother)\") +\n    scale_fill_gradient(low = \"skyblue\", high = \"grey45\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Education_mother)) %&gt;%\n  group_by(Education_mother) %&gt;%\n  summarize(mean_value = mean(Reading_Average, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Reading_Average, fill = Education_mother)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Education_mother, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of reading average score by highest level of schooling of mother\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Reading Average Score\",\n       fill = \"level of schooling(mother)\") +\n    scale_fill_gradient(low = \"skyblue\", high = \"grey45\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Education_mother)) %&gt;%\n  group_by(Education_mother) %&gt;%\n  summarize(mean_value = mean(Science_Average, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Science_Average, fill = Education_mother)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Education_mother, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of science average score by highest level of schooling of mother\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Science Average Score\",\n       fill = \"level of schooling(mother)\") +\n    scale_fill_gradient(low = \"skyblue\", high = \"grey45\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Education_mother)) %&gt;%\n  group_by(Education_mother) %&gt;%\n  summarize(mean_value = mean(Average_Score, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Average_Score, fill = Education_mother)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Education_mother, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of average score score by highest level of schooling of mother\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Average Score\",\n       fill = \"level of schooling(mother)\") +\n  scale_fill_gradient(low = \"skyblue\", high = \"grey45\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n4.3.1.2 Highest level of schooling of father\n\nMathReadingScienceAverage\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Education_father)) %&gt;%\n  group_by(Education_father) %&gt;%\n  summarize(mean_value = mean(Math_Average, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Math_Average, fill = Education_father)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Education_father, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of math average score by highest level of schooling of father\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Math Average Score\",\n       fill = \"level of schooling(father)\") +\n  scale_fill_gradient(low = \"darkolivegreen3\", high = \"grey45\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Education_father)) %&gt;%\n  group_by(Education_father) %&gt;%\n  summarize(mean_value = mean(Reading_Average, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Reading_Average, fill = Education_father)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Education_father, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of reading average score by highest level of schooling of father\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Reading Average Score\",\n       fill = \"level of schooling(father)\") +\n  scale_fill_gradient(low = \"darkolivegreen3\", high = \"grey45\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Education_father)) %&gt;%\n  group_by(Education_father) %&gt;%\n  summarize(mean_value = mean(Science_Average, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Science_Average, fill = Education_father)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Education_father, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of science average score by highest level of schooling of father\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Science Average Score\",\n       fill = \"level of schooling(father)\") +\n  scale_fill_gradient(low = \"darkolivegreen3\", high = \"grey45\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Education_father)) %&gt;%\n  group_by(Education_father) %&gt;%\n  summarize(mean_value = mean(Average_Score, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Average_Score, fill = Education_father)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Education_father, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of average score score by highest level of schooling of father\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Average Score\",\n       fill = \"level of schooling(father)\") +\n  scale_fill_gradient(low = \"darkolivegreen3\", high = \"grey45\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nFrom the density plot above, we can draw the following conclusion:\n\nHigher Schooling Level of Parents:\n\nAs the highest schooling level of parents increases, the density plot shows a tendency towards higher mean performance. This trend is particularly significant for parents who completed &lt;ISCED level 3.3&gt;.\nThis suggests a positive correlation between the educational attainment of parents and the academic performance of students. Students with parents who achieved higher education levels tend to have higher mean scores.\n\nNormal Distribution and Right Skewness:\n\nFor parents with lower schooling levels, the density plot tends to be normal distributed, and as the schooling level decreases further, it becomes right-skewed.\nThis indicates that as the educational background of parents becomes less advanced, the distribution of students’ performance becomes more spread out and right-skewed, with a concentration towards lower scores.\n\nSimilar Mean Performance for Father’s Education:\n\nInterestingly, for fathers who completed &lt;ISCED level 2&gt;, &lt;ISCED level 1&gt;, and did not complete &lt;ISCED level 1&gt;, the students’ mean performance is considered similar. This suggests that, at least in these specific educational levels, education level of father might not be a significant impact on in the academic performance of students for these 3 schooling levels.\n\nMore Significant Impact of Mothers’ Education:\n\nOn the mother’s side, there is a noticeable relationship between higher schooling levels and better student performance. As mothers’ education level increases, the density plot shows a corresponding increase in mean scores.\nThis may implies a stronger influence of mothers’ educational attainment on students’ academic performance compared to fathers.\n\n\nIn summary, the density plot provides insights into the complex relationship between students’ performance and the highest schooling level of parents. It highlights the impact of parental education, with a clear positive association between higher parental education and higher mean performance. The differences observed between mothers and fathers emphasize the varying roles and influences of each parent in shaping students’ academic outcomes.\n\n\n\n4.3.2 Performance distribution by number of book in students’ home\nThe presence of books in a home often reflects a positive educational environment. It can indicate a household that values literacy, learning, and intellectual curiosity.\nUsing density plot, we can visualize how performance is distributed for different student group having different number of books in home.\n\n\n\nNumber of book in students’ home\nDescription\n\n\n\n\n1\nThere are no books\n\n\n2\n1-10 books\n\n\n3\n11-25 books\n\n\n4\n26-100 books\n\n\n5\n101-200 books\n\n\n6\n201-500 books\n\n\n7\nMore than 500 books\n\n\n\n\nAverageReading\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Possession_book)) %&gt;%\n  group_by(Possession_book) %&gt;%\n  summarize(mean_value = mean(Average_Score, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Average_Score, fill = Possession_book)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Possession_book, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of average score score by number of books owned\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Average Score\",\n       fill = \"number of books owned\") +\n  scale_fill_gradient(low = \"grey45\", high = \"thistle3\") +\n  theme_minimal()+\n  theme(axis.text.y = element_text(size = 5))+  \n  scale_y_continuous(breaks = seq(0, 0.0055, by = 0.0025))\n\n\n\n\n\n\n\n\n\nShow the code\nmean_data &lt;- stu_df %&gt;%\n  filter(!is.na(Possession_book)) %&gt;%\n  group_by(Possession_book) %&gt;%\n  summarize(mean_value = mean(Reading_Average, na.rm = TRUE))\n\nggplot(na.omit(stu_df), aes(x = Reading_Average, fill = Possession_book)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = mean_data, aes(xintercept = mean_value),\n             color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~Possession_book, scales = \"free_y\", ncol = 1) +\n  labs(title = \"Density plot of average reading score score by number of books owned\",\n       subtitle = \"Red line represents the mean\",\n       x = \"Reading average Score\",\n       fill = \"number of books owned\") +\n  scale_fill_gradient(low = \"grey45\", high = \"thistle3\") +\n  theme_minimal()+\n  theme(axis.text.y = element_text(size = 5))+  \n  scale_y_continuous(breaks = seq(0, 0.0055, by = 0.0025))\n\n\n\n\n\n\n\n\nFrom the density plot, we can interpret that:\n\nFor students with no books in their homes, the density plot is right-skewed. This suggests that a lack of books is associated with a concentration of lower academic scores. The right skewness indicates that the majority of students in this group may have below-average scores.\nAs the number of books in the home increases, the density plot becomes more left-skewed. This trend suggests a positive correlation between the abundance of books and higher academic performance. The left skewness indicates a concentration of higher scores, with more students performing above the average.\nThe observation that the mean score of students increases as the number of books in the home increases aligns with the general trend of a left-skewed density plot. This indicates that, on average, students with access to a greater number of books tend to achieve higher academic scores.\nA notable deviation from the general trend occurs for students whose homes have “more than 500 books.” In this category, the mean score decreases, contrary to the overall positive relationship observed. This suggests that there may be diminishing returns in terms of academic performance when the number of books surpasses a certain threshold.\n\nIn summary, the density plot illustrates a positive association between the number of books in the home and student performance. However, the deviation observed for the “more than 500 books” category suggests a nuanced relationship, highlighting the need to consider optimal conditions for leveraging the positive influence of books on academic outcomes.\n\n\n4.3.3 Performance distribution by internet access\nAnalyzing student performance by whether the student has internet access provides a comprehensive perspective on the influence of digital resources and technologies on academic outcomes. It helps educators, policymakers, and researchers understand the role of internet access in shaping students’ learning experiences and achievements.\n\n\nShow the code\nggplot(na.omit(stu_df), aes(x = as.factor(Possession_internet), y = Average_Score, fill = factor(Possession_internet))) +\n  geom_violin(trim = FALSE) +\n  geom_boxplot(width = 0.2, position = position_dodge(width = 0.75)) +\n  stat_summary(\n    fun = median,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = 2,\n    size = 3,\n    color = \"black\"\n  ) +\n  stat_summary(\n    fun = mean,\n    geom = \"text\",\n    aes(label = round(after_stat(y), )),\n    position = position_dodge(width = 0.75),\n    vjust = -1,\n    size = 3,\n    color = \"#B00000\"\n  ) +\n   # Add geom_text layer for displaying mean dot in red\n  stat_summary(fun = mean, geom = \"point\", shape = 16, size = 3, color = \"#B00000\",\n               position = position_nudge(x = 0.0)) +\n  labs(title = \"Average score Distribution by Internet Access\",\n       subtitle = \"Black text: Median score; Red dot & Red text:Mean score\",\n       x = \"Internet Access\",\n       y = \"Average Score\") +\n  scale_fill_manual(values = c(\"1\" = \"lightcyan2\", \"2\" = \"khaki\"), name = \"Internet Access\", labels = c(\"1\" = \"Yes\", \"2\" = \"No\"))+\n  scale_x_discrete(labels = c(\"No\", \"Yes\"))+\n  theme_minimal()\n\n\n\n\n\nFrom above, we can conclude:\n\nMean and Median Comparison:\n\nFor students with no internet access, the mean performance is higher (562) compared to students with internet access (490). However, the median for students with no internet access (572) is higher than the median for students with internet access (471).\n\nWider Score Range with Internet Access:\n\nStudents with internet access exhibit a wider score range compared to those without internet access. The spread of scores is more diverse for students with internet access, indicating greater variability in academic performance.\nThere is a small portion of students with internet access who achieve an average score of 800 or higher. This suggests that, despite the wider score range, there are exceptional cases of very high academic performance among students with internet access.\n\nSkewness of distribution\n\nThe distribution of scores for students with internet access is right-skewed.\nThe distribution of scores for students without internet access is left-skewed. This indicates that a majority of students in this group tend to have above-average scores, with a concentration towards higher performance.\n\n\nIn summary, the violin plot provides a nuanced view of the performance of students based on internet access. It highlights the impact of internet and digital devices on students performance. In this case, Access to internet leads to decrease in performance for students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#reference",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#reference",
    "title": "Take-home_Ex01",
    "section": "6. Reference",
    "text": "6. Reference\nOne-way ANOVA\nggplot density plot\nbox-plot stat summary\nviolin plot with box plot"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class_Ex02",
    "section": "",
    "text": "Link to Tableau public"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on_Ex02",
    "section": "3.1 Beyond ggplot2 Annotation: ggrepel",
    "text": "3.1 Beyond ggplot2 Annotation: ggrepel\nggrepel provides geoms for ggplot2 to repel overlapping text labels:\ngeom_text_repel(), geom_label_repel()\n\nWith ggrepelWithout ggrepel\n\n\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point(aes(color = ENGLISH+MATHS)) +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point(aes(color = ENGLISH+MATHS)) +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands-on_Ex02",
    "section": "3.2 Beyond ggplot2: Themes",
    "text": "3.2 Beyond ggplot2: Themes\nggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\nThese are complete themes which control all non-data display. Use theme() if you just need to tweak the display of an existing theme.\n\ntheme_classictheme_darktheme_minimal\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"cadetblue3\") +\n  theme_classic() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"antiquewhite3\") +\n  theme_dark() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"azure3\") +\n  theme_minimal() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n\n3.2.1 Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\ntheme_economisttheme_fivethirtyeight\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_fivethirtyeight()\n\n\n\n\n\n\n\n\n\n\n3.2.2 Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\n\nShow the code\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 10,\n              base_size = 10,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on_Ex02",
    "section": "3.3 Beyond Single Graph",
    "text": "3.3 Beyond Single Graph\nIt is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs.\n\n3.3.1 Creating Composite Graphics\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n“|” operator to stack two ggplot2 graphs, “/” operator to place the plots beside each other, “()” operator the define the sequence of the plotting.\n\n\nShow the code\nsct &lt;- ggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point(aes(color = ENGLISH+MATHS)) +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores\") + theme(text=element_text(size=4), \n        axis.text=element_text(size=4),\n        axis.title=element_text(size=5),\n        plot.title=element_text(size=7), \n        legend.text=element_text(size=4),\n        legend.title=element_text(size=4))\n\nbox &lt;- ggplot(exam_data, aes(x=GENDER, y=ENGLISH+MATHS)) +\n  ggtitle(\"Gender distribution of Maths +English scores\")+ \n  geom_boxplot()+ theme(text=element_text(size=4), \n        axis.text=element_text(size=4),\n        axis.title=element_text(size=5),\n        plot.title=element_text(size=7), \n        legend.text=element_text(size=4),\n        legend.title=element_text(size=4))\n\n\nhist &lt;- ggplot(data=exam_data, \n             aes(x = MATHS+ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"azure3\") +\n  theme_minimal() +\n  ggtitle(\"Distribution of Maths +English scores\")+ theme(text=element_text(size=4), \n        axis.text=element_text(size=4),\n        axis.title=element_text(size=5),\n        plot.title=element_text(size=15), \n        legend.text=element_text(size=4),\n        legend.title=element_text(size=4))\n\n(sct | box ) /\n      hist\n\n\n\n\n\n\n\n3.3.2 Creating figure with insert\n\n\nShow the code\nhist + inset_element(box, \n                   left = 0.02, \n                   bottom = 0.3, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n3.3.3 Creating a composite figure by using patchwork and ggtheme\n\n\nShow the code\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()+ theme(\n        plot.title=element_text(size=12))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse is installed\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse is installed\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "title": "Hands-on Exercise 1",
    "section": "5.1 Essential Grammatical Elements in ggplot2: Data",
    "text": "5.1 Essential Grammatical Elements in ggplot2: Data\nLet us call the ggplot() function using the code chunk on the right.\n\nggplot(data=exam_data)\n\n\n\n\n\nA blank canvas appears.\nggplot() initializes a ggplot object."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-aesthetic-mappings",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-aesthetic-mappings",
    "title": "Hands-on Exercise 1",
    "section": "5.2 Essential Grammatical Elements in ggplot2: Aesthetic mappings",
    "text": "5.2 Essential Grammatical Elements in ggplot2: Aesthetic mappings\nThe aesthetic mappings take attributes of the data and and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can thus encode an aspect of the data and be used to convey information.\nAll aesthetics of a plot are specified in the aes() function call (in later part of this lesson, you will see that each geom layer can have its own aes specification)\n\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\nThe tick marks and label for the x-axis are displayed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "title": "Hands-on Exercise 1",
    "section": "5.3 Essential Grammatical Elements in ggplot2: geom",
    "text": "5.3 Essential Grammatical Elements in ggplot2: geom\nGeometric objects are the actual marks we put on a plot.A plot must have at least one geom.\n\n\n5.3.1 Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data, aes(x=RACE)) + geom_bar()\n\n\n\n\n\n\n5.3.2 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL) \n\n\n\n\n\n\n5.3.3 Geometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram() \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n5.3.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\nbins argument is used to change the number of bins to 20, fill argument is used to shade the histogram with light blue color, and color argument is used to change the outline colour of the bars in black\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n5.3.5 Modifying a geometric object by changing aes()\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n5.3.6 Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n5.3.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\n\n\n5.3.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n5.3.9 Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n5.3.10 geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "title": "Hands-on Exercise 1",
    "section": "5.4 Essential Grammatical Elements in ggplot2: stat",
    "text": "5.4 Essential Grammatical Elements in ggplot2: stat\nThe Statistics functions statistically transform data, usually as some form of summary. For example:\n\nfrequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n5.4.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n5.4.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)               \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\n\n5.4.3 Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)          \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\n\n\n5.4.4 Adding a best fit curve on a scatterplot\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve. In the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nDefault (loess)Linear Model\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "title": "Hands-on Exercise 1",
    "section": "5.5 Essential Grammatical Elements in ggplot2: Facets",
    "text": "5.5 Essential Grammatical Elements in ggplot2: Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap.\n\n5.5.1 Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n5.5.2 facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "title": "Hands-on Exercise 1",
    "section": "5.6 Essential Grammatical Elements in ggplot2: themes",
    "text": "5.6 Essential Grammatical Elements in ggplot2: themes\nThemes control elements of the graph not related to the data. For example:\nbackground colour size of fonts gridlines colour of labels Built-in themes include: - theme_gray() (default) - theme_bw() - theme_classic()\n\ntheme_graytheme_classictheme_minimal\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class_Ex01",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\ntidyverse, and haven\n\ntidyverse\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class_Ex01",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\ntidyverse, and haven\n\ntidyverse\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "title": "In-class_Ex01",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses ‘read_sas’ ‘haven’\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\nfilter(CNT ==\"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- \n  read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Application homepage:)\nIn this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "index.html#recent-posts",
    "href": "index.html#recent-posts",
    "title": "Visual Analytics and Applications",
    "section": "Recent Posts",
    "text": "Recent Posts"
  }
]